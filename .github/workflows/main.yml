name: Conduit-actions
on: 
  push:
  workflow_dispatch:
    branches: [ main ]
jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps: 
      - name: Code Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js environment
        uses: actions/setup-node@v4.0.2
        with:
          node-version: 16

      - name: Install dependencies
        run: npm install

      - name: Build frontend
        working-directory: ./frontend
        run: npm run build
      

      # - name: Run linters
      #   uses: wearerequired/lint-action@v2
      #   with:
      #     eslint: true
      #     prettier: true

  code-analysis:
    runs-on: ubuntu-latest
    needs: build-and-test
    steps: 
      - name: Code Checkout
        uses: actions/checkout@v4
        
      # Setup Java for sonar-scanner
      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      # Setup sonar-scanner
      - name: Setup SonarQube
        uses: warchant/setup-sonar-scanner@v7

      # Run sonar-scanner
      - name: SonarQube Scan
        run: sonar-scanner -X
          -Dsonar.host.url=${{ secrets.SONAR_URL }}
          -Dsonar.login=${{ secrets.SONAR_TOKEN }}
          -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }}
          -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}
          -Dsonar.sources=frontend/,backend/

      # Check the Quality Gate status.
      - name: SonarQube Quality Gate check
        id: sonarqube-quality-gate-check
        uses: sonarsource/sonarqube-quality-gate-action@master
        # Force to fail step after specific time.
        timeout-minutes: 5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_URL }}

      # - name: Build backend
      #   working-directory: ./backend
      #   run: npm run dev

      # - name: Test app
      #   run: npm run dev

      # -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}